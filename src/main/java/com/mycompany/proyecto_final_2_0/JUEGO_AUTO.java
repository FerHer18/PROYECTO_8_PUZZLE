/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyecto_final_2_0;
import javax.swing.*;
import java.util.*;
import javax.swing.Timer;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;

public class JUEGO_AUTO extends javax.swing.JFrame {
    private String seleccion;      
    private JButton[] botones;      
    private Timer temporizadorAnimacion;    
    private int pasoAnimacionActual = 0;
    private JFrame anterior;
    
    public JUEGO_AUTO(JFrame anterior, String seleccion) {
        initComponents();
        this.anterior=anterior;
        this.seleccion = seleccion;
        botones = new JButton[]{btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9};
        jPanel2.setPreferredSize(new java.awt.Dimension(450, 450));
        jPanel2.setLayout(new java.awt.GridLayout(3, 3));
        
        mezclarBotones(); 
         
        this.setLocationRelativeTo(null);
        this.pack();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        fondo1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.setLayout(new java.awt.GridLayout(3, 3));

        btn1.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        btn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/1.png"))); // NOI18N
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });
        jPanel2.add(btn1);

        btn2.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        btn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/2.png"))); // NOI18N
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });
        jPanel2.add(btn2);

        btn3.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        btn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/3.png"))); // NOI18N
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });
        jPanel2.add(btn3);

        btn4.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        btn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/4.png"))); // NOI18N
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });
        jPanel2.add(btn4);

        btn5.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        btn5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/5.png"))); // NOI18N
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });
        jPanel2.add(btn5);

        btn6.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        btn6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/6.png"))); // NOI18N
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });
        jPanel2.add(btn6);

        btn7.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        btn7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/7.png"))); // NOI18N
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });
        jPanel2.add(btn7);

        btn8.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        btn8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/8.png"))); // NOI18N
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });
        jPanel2.add(btn8);

        btn9.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        btn9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/0.png"))); // NOI18N
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });
        jPanel2.add(btn9);

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 450, 450));

        jButton19.setBackground(new java.awt.Color(94, 65, 34));
        jButton19.setFont(new java.awt.Font("Candara", 1, 18)); // NOI18N
        jButton19.setForeground(new java.awt.Color(255, 255, 255));
        jButton19.setText("INICIAR JUEGO");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 150, 200, 60));

        jButton20.setBackground(new java.awt.Color(94, 65, 34));
        jButton20.setFont(new java.awt.Font("Candara", 1, 18)); // NOI18N
        jButton20.setForeground(new java.awt.Color(255, 255, 255));
        jButton20.setText("SALIR");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 330, 200, 60));

        fondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondo_auto.jpg"))); // NOI18N
        fondo1.setOpaque(true);
        fondo1.setPreferredSize(new java.awt.Dimension(920, 550));
        getContentPane().add(fondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 550));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        if (!btn2.isVisible()) {
            btn2.setIcon(btn1.getIcon());
            btn2.setVisible(true);
            btn1.setVisible(false);
        } else if (!btn4.isVisible()) {
            btn4.setIcon(btn1.getIcon());
            btn4.setVisible(true);
            btn1.setVisible(false);
        }
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        if (!btn1.isVisible()) {
            btn1.setIcon(btn2.getIcon());
            btn1.setVisible(true);
            btn2.setVisible(false);
        } else if (!btn3.isVisible()) {
            btn3.setIcon(btn2.getIcon());
            btn3.setVisible(true);
            btn2.setVisible(false);
        } else if (!btn5.isVisible()) {
            btn5.setIcon(btn2.getIcon());
            btn5.setVisible(true);
            btn2.setVisible(false);
        }
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        if (!btn2.isVisible()) {
            btn2.setIcon(btn3.getIcon());
            btn2.setVisible(true);
            btn3.setVisible(false);
        } else if (!btn6.isVisible()) {
            btn6.setIcon(btn3.getIcon());
            btn6.setVisible(true);
            btn3.setVisible(false);
        }
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        if (!btn1.isVisible()) {
            btn1.setIcon(btn4.getIcon());
            btn1.setVisible(true);
            btn4.setVisible(false);
        } else if (!btn5.isVisible()) {
            btn5.setIcon(btn4.getIcon());
            btn5.setVisible(true);
            btn4.setVisible(false);
        } else if (!btn7.isVisible()) {
            btn7.setIcon(btn4.getIcon());
            btn7.setVisible(true);
            btn4.setVisible(false);
        }
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        if (!btn2.isVisible()) {
            btn2.setIcon(btn5.getIcon());
            btn2.setVisible(true);
            btn5.setVisible(false);
        } else if (!btn4.isVisible()) {
            btn4.setIcon(btn5.getIcon());
            btn4.setVisible(true);
            btn5.setVisible(false);
        } else if (!btn6.isVisible()) {
            btn6.setIcon(btn5.getIcon());
            btn6.setVisible(true);
            btn5.setVisible(false);
        } else if (!btn8.isVisible()) {
            btn8.setIcon(btn5.getIcon());
            btn8.setVisible(true);
            btn5.setVisible(false);
        }
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        if (!btn3.isVisible()) {
            btn3.setIcon(btn6.getIcon());
            btn3.setVisible(true);
            btn6.setVisible(false);
        } else if (!btn5.isVisible()) {
            btn5.setIcon(btn6.getIcon());
            btn5.setVisible(true);
            btn6.setVisible(false);
        } else if (!btn9.isVisible()) {
            btn9.setIcon(btn6.getIcon());
            btn9.setVisible(true);
            btn6.setVisible(false);
        }
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        if (!btn4.isVisible()) {
            btn4.setIcon(btn7.getIcon());
            btn4.setVisible(true);
            btn7.setVisible(false);
        } else if (!btn8.isVisible()) {
            btn8.setIcon(btn7.getIcon());
            btn8.setVisible(true);
            btn7.setVisible(false);
        }
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        if (!btn5.isVisible()) {
            btn5.setIcon(btn8.getIcon());
            btn5.setVisible(true);
            btn8.setVisible(false);
        } else if (!btn7.isVisible()) {
            btn7.setIcon(btn8.getIcon());
            btn7.setVisible(true);
            btn8.setVisible(false);
        } else if (!btn9.isVisible()) {
            btn9.setIcon(btn8.getIcon());
            btn9.setVisible(true);
            btn8.setVisible(false);
        }
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        if (!btn6.isVisible()) {
            btn6.setIcon(btn9.getIcon());
            btn6.setVisible(true);
            btn9.setVisible(false);
        } else if (!btn8.isVisible()) {
            btn8.setIcon(btn9.getIcon());
            btn8.setVisible(true);
            btn9.setVisible(false);
        }
    }//GEN-LAST:event_btn9ActionPerformed
    private void mezclarBotones() {
        int[][] estadoGenerado = generarEstadoInicialResoluble();
        actualizarBotones(estadoGenerado); 
    }
    
    private void actualizarBotones(int[][] estado) {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                int valor = estado[i][j]; 
                int indice = i * 3 + j; 

                URL ruta = getClass().getResource("/" + valor + ".png");
                if (ruta != null) {
                    botones[indice].setIcon(new ImageIcon(ruta)); 
                } else {
                    botones[indice].setText(String.valueOf(valor));
                    System.err.println("Ups :(, al parecer existe un error " + valor + ". Usando texto en su lugar");
                }
                if (valor == 0) {
                    botones[indice].setVisible(false); 
                } else {
                    botones[indice].setVisible(true); 
                }
            }
        }
    }
        
    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        if (temporizadorAnimacion != null && temporizadorAnimacion.isRunning()) {
        temporizadorAnimacion.stop();
    }

    int[][] estadoInicialActual = obtenerEstadoActualDelTablero(); 
    int[][] estadoMetaObjetivo; 

    switch (seleccion) {
        case "HORIZONTAL":
            estadoMetaObjetivo = new int[][] {
                {1, 2, 3},
                {4, 5, 6},
                {7, 8, 0} 
            };
            break;
        case "VERTICAL":
            estadoMetaObjetivo = new int[][] {
                {1, 4, 7},
                {2, 5, 8},
                {3, 6, 0}
            };
            break;
        case "CARACOL":
            estadoMetaObjetivo = new int[][] {
                {5, 6, 7},
                {4, 1, 8},
                {3, 2, 0} 
            };
            break;
        case "IMPOSIBLE":
            estadoMetaObjetivo = new int[][] {
                {1, 2, 3},
                {4, 5, 6},
                {8, 7, 0} 
            };
            break;
        default:
            estadoMetaObjetivo = new int[][] {
                {1, 2, 3},
                {4, 5, 6},
                {7, 8, 0}
            };
            break;
    }

    BAB solucionadorBAB = new BAB();

    boolean esSolubleHaciaMeta = solucionadorBAB.esSoluble(estadoInicialActual, estadoMetaObjetivo);

    if (!seleccion.equals("IMPOSIBLE") && !esSolubleHaciaMeta) {
        int r1 = -1, c1 = -1;
        int r2 = -1, c2 = -1;
        
        for (int r = 0; r < 3; r++) {
            for (int c = 0; c < 3; c++) {
                if (estadoInicialActual[r][c] != 0) {
                    if (r1 == -1) { 
                        r1 = r; c1 = c;
                    } else { 
                        r2 = r; c2 = c;
                        break;
                    }
                }
            }
            if (r2 != -1) break;
        }

        if (r1 != -1 && r2 != -1) {
            int temp = estadoInicialActual[r1][c1];
            estadoInicialActual[r1][c1] = estadoInicialActual[r2][c2];
            estadoInicialActual[r2][c2] = temp;
            
            actualizarBotones(estadoInicialActual);
            
            esSolubleHaciaMeta = solucionadorBAB.esSoluble(estadoInicialActual, estadoMetaObjetivo);
            
            if (!esSolubleHaciaMeta) {
                JOptionPane.showMessageDialog(this, "¡Ups :(, al parecer existe un error '" + seleccion + "'.Se debe trabajar en ello.", "Error Irrecuperable", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Reiniciado '" + seleccion + "'.", "Ajuste de Solvabilidad", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ups, nuevamente error :(", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }
    if (seleccion.equals("IMPOSIBLE")) {
        if (esSolubleHaciaMeta) {
            JOptionPane.showMessageDialog(this, "Error :(, al parecer elegiste el modo IMPOSIBLE", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No se puede resolver", "Puzzle Imposible", JOptionPane.INFORMATION_MESSAGE);
        }
        return;
    } else {
        if (!esSolubleHaciaMeta) { 
             JOptionPane.showMessageDialog(this, "Error inesperado :(", "Error Interno", JOptionPane.ERROR_MESSAGE);
             return;
        }
    }
    List<BAB.PuzzleNode> solucion = solucionadorBAB.resolver(estadoInicialActual, estadoMetaObjetivo);

    if (solucion == null || solucion.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Error en el algoritmo :(", "Error Interno", JOptionPane.ERROR_MESSAGE);
        return;
    }

    pasoAnimacionActual = 0;
    
    temporizadorAnimacion = new Timer(700, new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (pasoAnimacionActual < solucion.size()) {
                int[][] tablero = solucion.get(pasoAnimacionActual).estado;
                actualizarBotones(tablero);
                pasoAnimacionActual++;
            } else {
                temporizadorAnimacion.stop();
                JOptionPane.showMessageDialog(null, "¡LO LOGRASTE! :)", "Puzzle Completado", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    });
    temporizadorAnimacion.start();
    }
        
   private int[][] generarEstadoInicialResoluble() {
    List<Integer> numeros = new ArrayList<>();
    for (int i = 0; i <= 8; i++) {
        numeros.add(i);
    }
    int[][] estado = new int[3][3];
    BAB verificadorBAB = new BAB();
    int[][] metaEstandar = { 
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 0}
    };

    do {
        Collections.shuffle(numeros);
        for (int i = 0; i < 9; i++) {
            estado[i / 3][i % 3] = numeros.get(i);
        }
    } while (!verificadorBAB.esSoluble(estado, metaEstandar)); 
    return estado;
}
    private int[][] obtenerEstadoActualDelTablero() {
        int[][] estado = new int[3][3];
        for (int i = 0; i < 9; i++) {
            JButton boton = botones[i]; 
            if (!boton.isVisible()) {
                estado[i / 3][i % 3] = 0; 
            } else {
                ImageIcon icono = (ImageIcon) boton.getIcon();
                if (icono != null && icono.getDescription() != null) {
                    String descripcion = icono.getDescription();

                    int ultimaBarra = descripcion.lastIndexOf("/");
                    int puntoPng = descripcion.lastIndexOf(".png");
                    if (ultimaBarra != -1 && puntoPng != -1 && puntoPng > ultimaBarra) {
                        try {
                            String numStr = descripcion.substring(ultimaBarra + 1, puntoPng);
                            estado[i / 3][i % 3] = Integer.parseInt(numStr);
                        } catch (NumberFormatException e) {
                            System.err.println("Error :(" + descripcion);
                            estado[i / 3][i % 3] = -1; 
                        }
                    } else {
                        System.err.println("Formato de ruta de imagen inesperado: " + descripcion);
                        estado[i / 3][i % 3] = -1; 
                    }
                } else {
                    System.err.println("Ey, parace que el boton " + i + " no tiene una imagen valida.");
                    estado[i / 3][i % 3] = -1; 
                }
            }
        }
            return estado; 
    }//GEN-LAST:event_jButton19ActionPerformed
    
    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        INICIO pantallaInicio = new INICIO();
        pantallaInicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton20ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JLabel fondo1;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton20;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
